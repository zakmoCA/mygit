#!/usr/bin/env ruby

require "digest"
require "zlib"
require "fileutils"

MYGIT_DIR = ".mygit".freeze
OBJECTS_DIR = "#{MYGIT_DIR}/objects".freeze
INDEX_PATH = "#{MYGIT_DIR}/index"

if !Dir.exist? MYGIT_DIR
  $stderr.puts "This is not an existing MyGit project"
  exit 1
end

path = ARGV.first

if path.nil?
  $stderr.puts "No path specified"
  exit 1
end

begin
  file_contents = File.read(path)

  # init blob
  content = "blob #{file_contents.bytesize}\0#{file_contents}"
  sha = Digest::SHA1.hexdigest(content)

  # compress content + header
  blob = Zlib::Deflate.deflate(content)

  # store blob
  object_dir = "#{OBJECTS_DIR}/#{sha[0..1]}"
  FileUtils.mkdir_p object_dir
  blob_path = "#{object_dir}/#{sha[2..-1]}"

  File.open(blob_path, "wb") do |file|
    file.write blob
  end

  # index update
  File.open(INDEX_PATH, "a") do |file|
    file.puts "#{sha} #{path}"
  end

  puts "Added #{path} (#{sha[0..6]})"

rescue Errno::ENOENT
  $stderr.puts "File not found: #{path}"
  exit 1
rescue Errno::EACCES
  $stderr.puts "Permission denied: #{path}"
  exit 1
end
